
/*******************************************************************************
* generated by lcd-image-converter rev.129188f from 2019-07-09 00:20:51 +0500
* image
* filename: unsaved
* name: Image
*
* preset name: Монохромное
* data block size: 8 bit(s), uint8_t
* RLE compression enabled: no
* conversion type: Monochrome, Diffuse Dither 128
* split to rows: yes
* bits per pixel: 1
*
* preprocess:
*  main scan direction: top_to_bottom
*  line scan direction: forward
*  inverse: no
*******************************************************************************/

/*
 typedef struct {
     const uint8_t *data;
     uint16_t width;
     uint16_t height;
     uint8_t dataSize;
     } tImage;
*/
#include <stdint.h>



static const uint8_t image_data_Image[384] = {
    // ████████████████████████████████████████████████████████████████
    // ██∙███████████████████████████∙∙∙███████████████████████████∙∙∙█
    // █∙∙█████████████████████████████∙█████████████████████████████∙█
    // ██∙███████████████████████████∙∙∙███████████████████████████∙∙∙█
    // ██∙███████████████████████████∙███████████████████████████████∙█
    // █∙∙∙██████████████████████████∙∙∙███████████████████████████∙∙∙█
    // ████████████████████████████████████████████████████████████████
    // ████████████████████████████████████████████████████████████████
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // ∙██∙██████████████████████████∙██∙██████████████████████████∙██∙
    // ∙██∙██████████████████████████∙██∙██████████████████████████∙██∙
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙███████∙∙████████∙∙███████∙∙██∙∙███████∙∙████████∙∙███████∙∙█
    // █∙∙███████∙∙████████∙∙███████∙∙██∙∙███████∙∙████████∙∙███████∙∙█
    // █∙∙██████∙∙∙∙██████∙∙∙∙██████∙∙██∙∙██████∙∙∙∙██████∙∙∙∙██████∙∙█
    // ██∙∙████∙∙██∙∙████∙∙██∙∙████∙∙████∙∙████∙∙██∙∙████∙∙██∙∙████∙∙██
    // ███∙∙██∙∙████∙∙██∙∙████∙∙██∙∙██████∙∙██∙∙████∙∙██∙∙████∙∙██∙∙███
    // ████∙∙∙∙██████∙∙∙∙██████∙∙∙∙████████∙∙∙∙██████∙∙∙∙██████∙∙∙∙████
    // █████∙∙████████∙∙████████∙∙██████████∙∙████████∙∙████████∙∙█████
    // ████████████████████████████████████████████████████████████████
    // ████████████████████████████████████████████████████████████████
    // █████∙∙████████∙∙████████∙∙██████████∙∙████████∙∙████████∙∙█████
    // ████∙∙∙∙██████∙∙∙∙██████∙∙∙∙████████∙∙∙∙██████∙∙∙∙██████∙∙∙∙████
    // ███∙∙██∙∙████∙∙██∙∙████∙∙██∙∙██████∙∙██∙∙████∙∙██∙∙████∙∙██∙∙███
    // ██∙∙████∙∙██∙∙████∙∙██∙∙████∙∙████∙∙████∙∙██∙∙████∙∙██∙∙████∙∙██
    // █∙∙██████∙∙∙∙██████∙∙∙∙██████∙∙██∙∙██████∙∙∙∙██████∙∙∙∙██████∙∙█
    // █∙∙███████∙∙████████∙∙███████∙∙██∙∙███████∙∙████████∙∙███████∙∙█
    // █∙∙███████∙∙████████∙∙███████∙∙██∙∙███████∙∙████████∙∙███████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // ∙██∙██████████████████████████∙██∙██████████████████████████∙██∙
    // ∙██∙██████████████████████████∙██∙██████████████████████████∙██∙
    // █∙∙████████████████████████████∙∙████████████████████████████∙∙█
    // ████████████████████████████████████████████████████████████████
    // ████████████████████████████████████████████████████████████████
    // █∙█∙██████████████████████████∙∙∙███████████████████████████∙∙∙█
    // █∙█∙██████████████████████████∙█████████████████████████████∙███
    // █∙∙∙██████████████████████████∙∙∙███████████████████████████∙∙∙█
    // ███∙████████████████████████████∙███████████████████████████∙█∙█
    // ███∙██████████████████████████∙∙∙███████████████████████████∙∙∙█
    // ████████████████████████████████████████████████████████████████
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xdf, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0x9f, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xfd, 
    0xdf, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0xdf, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xfd, 
    0x8f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x6f, 0xff, 0xff, 0xfd, 0xbf, 0xff, 0xff, 0xf6, 
    0x6f, 0xff, 0xff, 0xfd, 0xbf, 0xff, 0xff, 0xf6, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xcf, 0xf3, 0xf9, 0x9f, 0xcf, 0xf3, 0xf9, 
    0x9f, 0xcf, 0xf3, 0xf9, 0x9f, 0xcf, 0xf3, 0xf9, 
    0x9f, 0x87, 0xe1, 0xf9, 0x9f, 0x87, 0xe1, 0xf9, 
    0xcf, 0x33, 0xcc, 0xf3, 0xcf, 0x33, 0xcc, 0xf3, 
    0xe6, 0x79, 0x9e, 0x67, 0xe6, 0x79, 0x9e, 0x67, 
    0xf0, 0xfc, 0x3f, 0x0f, 0xf0, 0xfc, 0x3f, 0x0f, 
    0xf9, 0xfe, 0x7f, 0x9f, 0xf9, 0xfe, 0x7f, 0x9f, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xf9, 0xfe, 0x7f, 0x9f, 0xf9, 0xfe, 0x7f, 0x9f, 
    0xf0, 0xfc, 0x3f, 0x0f, 0xf0, 0xfc, 0x3f, 0x0f, 
    0xe6, 0x79, 0x9e, 0x67, 0xe6, 0x79, 0x9e, 0x67, 
    0xcf, 0x33, 0xcc, 0xf3, 0xcf, 0x33, 0xcc, 0xf3, 
    0x9f, 0x87, 0xe1, 0xf9, 0x9f, 0x87, 0xe1, 0xf9, 
    0x9f, 0xcf, 0xf3, 0xf9, 0x9f, 0xcf, 0xf3, 0xf9, 
    0x9f, 0xcf, 0xf3, 0xf9, 0x9f, 0xcf, 0xf3, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0x6f, 0xff, 0xff, 0xfd, 0xbf, 0xff, 0xff, 0xf6, 
    0x6f, 0xff, 0xff, 0xfd, 0xbf, 0xff, 0xff, 0xf6, 
    0x9f, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xf9, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xaf, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0xaf, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xf7, 
    0x8f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0xef, 0xff, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xf5, 
    0xef, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xf1, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
const tImage Image = { image_data_Image, 64, 48,
    8 };

